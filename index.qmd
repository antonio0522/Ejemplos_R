---
title: "Ejemplos_R"
---

## Ejemplo 1 (Leer archivo CSV con la libreria tidyverse)

1. En este paso se coloca la librería que utilizaremos, en este caso sería tidyverse
```{r,message=FALSE} 
library(tidyverse)
```
2. luego procedemos ha crear una variable con nombre datos, la misma se le asignará el archivo
que se leerá, en este caso sería el archivo con nombre Datos_Ejemplo, el mismo contiene un formato
csv.

Por otra parte se utiliza la función read_csv, esta función se encarga de leer un fichero de valores separados por comas (formato CSV) y lo vuelca en un dataframe, incluyéndo gran candidad de parámetros para determinar cómo se realiza la lectura y cómo deberán tratarse los datos leídos
```{r}
datos <- read_csv("Datos_Ejemplo.csv")
```

3. Por ultimo se imprime la información de los datos leidos 
```{r}
datos
```

## Ejemplo 2 (Se utiliza la libreria gapminder para los datos que vamos a leer y se filtra con filter)
```{r}
#Se procedio a realizar las instalaciones de los paquetes a utilizar
#install.packages("tidyverse")
library(gapminder)
library(tidyverse)
data("gapminder")
#Se muestra una base de datos como ejemplo
head(gapminder)
#Se realiza filtracion de datos
filter(gapminder, country =='Mexico')
```


## Ejemplo 3 (Implementación de graficas utilizando libreria ggplot2)

```{r}
#datos de la primera parte
year <- c('2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018')
produccion <- c(11, 13, 11, 8, 12, 11, 12, 8, 10)
 
# graficando con codigo
 plot(x = year, y = produccion)
 
 
# editando la grafica
 plot(x = year, y = produccion, main = 'produccion', xlab = '', ylab = '', col =  'cornflowerblue', pch = 16, panel.first = grid ())
 
 
# Graficas con ggplot2
# install.package(ggplot2) # para instalar ggplot2
library(ggplot2)
 
# hacer dataframe
peliculas <- data.frame(year, 
                        produccion)
 
# graficar utilizando ggplot
 ggplot(data = peliculas, mapping = aes(x = year, y = produccion)) + geom_point() + labs(title = 'produccion')
```

## Ejemplo 4 (Se utiliza la libreria stringr)

En este ejemplo se utilizara las librerias stringr que tiene la funcion de manipular cadenas: copiar, cambiar caracteres, comparar cadenas, etc.
```{r}
library(stringr)
library(tidyverse)
```

En esta parte se crea un vector con distintos nombre, luego se agrupa por medio de una coma, para que al momento de la impresion quede ordemadamente y separados por coma.
```{r}
x <- c ("why", "video", "cross", "extra", "deal", "authority")
str_length(x)
str_c(x, collapse = ",")
```

Aqui se realiza un filtrado de datos en la linea de caracteres que tenemos en el  vector X, con la finalidad de, mostrar la primera vocal de cada palabra que encontramos en las palabras mostradas en el vector
```{r}
str_extract(string = x, pattern = "[aeiou]")
```

En este proceso se analiza los caracteres asignados en la variable palabra, donde le solicitamos mostrar los caracteres que se encuentran entre la posición 5 hasta la posición 13. 
```{r}
palabra <- "Univesidad de Panama"
str_sub(string = palabra, start = 5, end = 13)


```

## Asignación #1