[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ejemplos_R",
    "section": "",
    "text": "En este paso se coloca la librería que utilizaremos, en este caso sería tidyverse\n\n\nlibrary(tidyverse)\n\nWarning: package 'stringr' was built under R version 4.2.3\n\n\n\nluego procedemos ha crear una variable con nombre datos, la misma se le asignará el archivo que se leerá, en este caso sería el archivo con nombre Datos_Ejemplo, el mismo contiene un formato csv.\n\nPor otra parte se utiliza la función read_csv, esta función se encarga de leer un fichero de valores separados por comas (formato CSV) y lo vuelca en un dataframe, incluyéndo gran candidad de parámetros para determinar cómo se realiza la lectura y cómo deberán tratarse los datos leídos\n\ndatos &lt;- read_csv(\"Datos_Ejemplo.csv\")\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 22 Columns: 1\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): ;Base de datos de productos;;;;;;;;\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nPor ultimo se imprime la información de los datos leidos\n\n\ndatos\n\n# A tibble: 22 × 1\n   `;Base de datos de productos;;;;;;;;`                                        \n   &lt;chr&gt;                                                                        \n 1 ;;;;;;;;;                                                                    \n 2 IdProducto;NombreProducto;Proveedor;Categoría;CantidadPorUnidad;PrecioUnidad…\n 3 1;Té Dharamsala;Exotic Liquids;Bebidas;10 cajas x 20 bolsas;18.00 €;39;0;10;…\n 4 2;Cerveza tibetana Barley;Exotic Liquids;Bebidas;24 - bot. 12 l;19.00 €;17;4…\n 5 3;Sirope de regaliz;Exotic Liquids;Condimentos;12 - bot. 550 ml;10.00 €;13;7…\n 6 4;Especias Cajun del chef Anton;New Orleans Cajun Delights;Condimentos;48 - …\n 7 5;Mezcla Gumbo del chef Anton;New Orleans Cajun Delights;Condimentos;36 caja…\n 8 6;Mermelada de grosellas de la abuela;Grandma Kelly's Homestead;Condimentos;…\n 9 7;Peras secas orgánicas del tío Bob;Grandma Kelly's Homestead;Frutas/Verdura…\n10 8;Salsa de arándanos Northwoods;Grandma Kelly's Homestead;Condimentos;12 - f…\n# ℹ 12 more rows"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#ejemplo-1",
    "href": "index.html#ejemplo-1",
    "title": "Ejemplos_R",
    "section": "",
    "text": "En este paso se coloca la librería que utilizaremos, en este caso sería tidyverse\n\n\nlibrary(tidyverse)\n\nWarning: package 'stringr' was built under R version 4.2.3\n\n\n\nluego procedemos ha crear una variable con nombre datos, la misma se le asignará el archivo que se leerá, en este caso sería el archivo con nombre Datos_Ejemplo, el mismo contiene un formato csv.\n\nPor otra parte se utiliza la función read_csv, esta función se encarga de leer un fichero de valores separados por comas (formato CSV) y lo vuelca en un dataframe, incluyéndo gran candidad de parámetros para determinar cómo se realiza la lectura y cómo deberán tratarse los datos leídos\n\ndatos &lt;- read_csv(\"Datos_Ejemplo.csv\")\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 22 Columns: 1\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): ;Base de datos de productos;;;;;;;;\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nPor ultimo se imprime la información de los datos leidos\n\n\ndatos\n\n# A tibble: 22 × 1\n   `;Base de datos de productos;;;;;;;;`                                        \n   &lt;chr&gt;                                                                        \n 1 ;;;;;;;;;                                                                    \n 2 IdProducto;NombreProducto;Proveedor;Categoría;CantidadPorUnidad;PrecioUnidad…\n 3 1;Té Dharamsala;Exotic Liquids;Bebidas;10 cajas x 20 bolsas;18.00 €;39;0;10;…\n 4 2;Cerveza tibetana Barley;Exotic Liquids;Bebidas;24 - bot. 12 l;19.00 €;17;4…\n 5 3;Sirope de regaliz;Exotic Liquids;Condimentos;12 - bot. 550 ml;10.00 €;13;7…\n 6 4;Especias Cajun del chef Anton;New Orleans Cajun Delights;Condimentos;48 - …\n 7 5;Mezcla Gumbo del chef Anton;New Orleans Cajun Delights;Condimentos;36 caja…\n 8 6;Mermelada de grosellas de la abuela;Grandma Kelly's Homestead;Condimentos;…\n 9 7;Peras secas orgánicas del tío Bob;Grandma Kelly's Homestead;Frutas/Verdura…\n10 8;Salsa de arándanos Northwoods;Grandma Kelly's Homestead;Condimentos;12 - f…\n# ℹ 12 more rows"
  },
  {
    "objectID": "index.html#ejemplo-1-1",
    "href": "index.html#ejemplo-1-1",
    "title": "Ejemplos_R",
    "section": "Ejemplo 1",
    "text": "Ejemplo 1\n\n#Se procedio a realizar las instalaciones de los paquetes a utilizar\n#install.packages(\"tidyverse\")\nlibrary(gapminder)\nlibrary(tidyverse)\ndata(\"gapminder\")\n#Se muestra una base de datos como ejemplo\nhead(gapminder)\n\n# A tibble: 6 × 6\n  country     continent  year lifeExp      pop gdpPercap\n  &lt;fct&gt;       &lt;fct&gt;     &lt;int&gt;   &lt;dbl&gt;    &lt;int&gt;     &lt;dbl&gt;\n1 Afghanistan Asia       1952    28.8  8425333      779.\n2 Afghanistan Asia       1957    30.3  9240934      821.\n3 Afghanistan Asia       1962    32.0 10267083      853.\n4 Afghanistan Asia       1967    34.0 11537966      836.\n5 Afghanistan Asia       1972    36.1 13079460      740.\n6 Afghanistan Asia       1977    38.4 14880372      786.\n\n#Se realiza filtracion de datos\nfilter(gapminder, country =='Mexico')\n\n# A tibble: 12 × 6\n   country continent  year lifeExp       pop gdpPercap\n   &lt;fct&gt;   &lt;fct&gt;     &lt;int&gt;   &lt;dbl&gt;     &lt;int&gt;     &lt;dbl&gt;\n 1 Mexico  Americas   1952    50.8  30144317     3478.\n 2 Mexico  Americas   1957    55.2  35015548     4132.\n 3 Mexico  Americas   1962    58.3  41121485     4582.\n 4 Mexico  Americas   1967    60.1  47995559     5755.\n 5 Mexico  Americas   1972    62.4  55984294     6809.\n 6 Mexico  Americas   1977    65.0  63759976     7675.\n 7 Mexico  Americas   1982    67.4  71640904     9611.\n 8 Mexico  Americas   1987    69.5  80122492     8688.\n 9 Mexico  Americas   1992    71.5  88111030     9472.\n10 Mexico  Americas   1997    73.7  95895146     9767.\n11 Mexico  Americas   2002    74.9 102479927    10742.\n12 Mexico  Americas   2007    76.2 108700891    11978."
  },
  {
    "objectID": "index.html#ejemplo-2",
    "href": "index.html#ejemplo-2",
    "title": "Ejemplos_R",
    "section": "Ejemplo 2",
    "text": "Ejemplo 2\n\n#Se procedio a realizar las instalaciones de los paquetes a utilizar\n#install.packages(\"tidyverse\")\nlibrary(gapminder)\nlibrary(tidyverse)\ndata(\"gapminder\")\n#Se muestra una base de datos como ejemplo\nhead(gapminder)\n\n# A tibble: 6 × 6\n  country     continent  year lifeExp      pop gdpPercap\n  &lt;fct&gt;       &lt;fct&gt;     &lt;int&gt;   &lt;dbl&gt;    &lt;int&gt;     &lt;dbl&gt;\n1 Afghanistan Asia       1952    28.8  8425333      779.\n2 Afghanistan Asia       1957    30.3  9240934      821.\n3 Afghanistan Asia       1962    32.0 10267083      853.\n4 Afghanistan Asia       1967    34.0 11537966      836.\n5 Afghanistan Asia       1972    36.1 13079460      740.\n6 Afghanistan Asia       1977    38.4 14880372      786.\n\n#Se realiza filtracion de datos\nfilter(gapminder, country =='Mexico')\n\n# A tibble: 12 × 6\n   country continent  year lifeExp       pop gdpPercap\n   &lt;fct&gt;   &lt;fct&gt;     &lt;int&gt;   &lt;dbl&gt;     &lt;int&gt;     &lt;dbl&gt;\n 1 Mexico  Americas   1952    50.8  30144317     3478.\n 2 Mexico  Americas   1957    55.2  35015548     4132.\n 3 Mexico  Americas   1962    58.3  41121485     4582.\n 4 Mexico  Americas   1967    60.1  47995559     5755.\n 5 Mexico  Americas   1972    62.4  55984294     6809.\n 6 Mexico  Americas   1977    65.0  63759976     7675.\n 7 Mexico  Americas   1982    67.4  71640904     9611.\n 8 Mexico  Americas   1987    69.5  80122492     8688.\n 9 Mexico  Americas   1992    71.5  88111030     9472.\n10 Mexico  Americas   1997    73.7  95895146     9767.\n11 Mexico  Americas   2002    74.9 102479927    10742.\n12 Mexico  Americas   2007    76.2 108700891    11978."
  },
  {
    "objectID": "index.html#ejemplo-3",
    "href": "index.html#ejemplo-3",
    "title": "Ejemplos_R",
    "section": "Ejemplo 3",
    "text": "Ejemplo 3"
  },
  {
    "objectID": "index.html#ejemplo-4",
    "href": "index.html#ejemplo-4",
    "title": "Ejemplos_R",
    "section": "Ejemplo 4",
    "text": "Ejemplo 4"
  },
  {
    "objectID": "index.html#ejemplo-1-leer-archivo-csv-con-la-libreria-tidyverse",
    "href": "index.html#ejemplo-1-leer-archivo-csv-con-la-libreria-tidyverse",
    "title": "Ejemplos_R",
    "section": "",
    "text": "En este paso se coloca la librería que utilizaremos, en este caso sería tidyverse\n\n\nlibrary(tidyverse)\n\nWarning: package 'stringr' was built under R version 4.2.3\n\n\n\nluego procedemos ha crear una variable con nombre datos, la misma se le asignará el archivo que se leerá, en este caso sería el archivo con nombre Datos_Ejemplo, el mismo contiene un formato csv.\n\nPor otra parte se utiliza la función read_csv, esta función se encarga de leer un fichero de valores separados por comas (formato CSV) y lo vuelca en un dataframe, incluyéndo gran candidad de parámetros para determinar cómo se realiza la lectura y cómo deberán tratarse los datos leídos\n\ndatos &lt;- read_csv(\"Datos_Ejemplo.csv\")\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 22 Columns: 1\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): ;Base de datos de productos;;;;;;;;\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nPor ultimo se imprime la información de los datos leidos\n\n\ndatos\n\n# A tibble: 22 × 1\n   `;Base de datos de productos;;;;;;;;`                                        \n   &lt;chr&gt;                                                                        \n 1 ;;;;;;;;;                                                                    \n 2 IdProducto;NombreProducto;Proveedor;Categoría;CantidadPorUnidad;PrecioUnidad…\n 3 1;Té Dharamsala;Exotic Liquids;Bebidas;10 cajas x 20 bolsas;18.00 €;39;0;10;…\n 4 2;Cerveza tibetana Barley;Exotic Liquids;Bebidas;24 - bot. 12 l;19.00 €;17;4…\n 5 3;Sirope de regaliz;Exotic Liquids;Condimentos;12 - bot. 550 ml;10.00 €;13;7…\n 6 4;Especias Cajun del chef Anton;New Orleans Cajun Delights;Condimentos;48 - …\n 7 5;Mezcla Gumbo del chef Anton;New Orleans Cajun Delights;Condimentos;36 caja…\n 8 6;Mermelada de grosellas de la abuela;Grandma Kelly's Homestead;Condimentos;…\n 9 7;Peras secas orgánicas del tío Bob;Grandma Kelly's Homestead;Frutas/Verdura…\n10 8;Salsa de arándanos Northwoods;Grandma Kelly's Homestead;Condimentos;12 - f…\n# ℹ 12 more rows"
  },
  {
    "objectID": "index.html#ejemplo-2-se-utiliza-la-libreria-gapminder-para-los-datos-que-vamos-a-leer-y-se-filtra-con-filter",
    "href": "index.html#ejemplo-2-se-utiliza-la-libreria-gapminder-para-los-datos-que-vamos-a-leer-y-se-filtra-con-filter",
    "title": "Ejemplos_R",
    "section": "Ejemplo 2 (Se utiliza la libreria gapminder para los datos que vamos a leer y se filtra con filter)",
    "text": "Ejemplo 2 (Se utiliza la libreria gapminder para los datos que vamos a leer y se filtra con filter)\n\n#Se procedio a realizar las instalaciones de los paquetes a utilizar\n#install.packages(\"tidyverse\")\nlibrary(gapminder)\nlibrary(tidyverse)\ndata(\"gapminder\")\n#Se muestra una base de datos como ejemplo\nhead(gapminder)\n\n# A tibble: 6 × 6\n  country     continent  year lifeExp      pop gdpPercap\n  &lt;fct&gt;       &lt;fct&gt;     &lt;int&gt;   &lt;dbl&gt;    &lt;int&gt;     &lt;dbl&gt;\n1 Afghanistan Asia       1952    28.8  8425333      779.\n2 Afghanistan Asia       1957    30.3  9240934      821.\n3 Afghanistan Asia       1962    32.0 10267083      853.\n4 Afghanistan Asia       1967    34.0 11537966      836.\n5 Afghanistan Asia       1972    36.1 13079460      740.\n6 Afghanistan Asia       1977    38.4 14880372      786.\n\n#Se realiza filtracion de datos\nfilter(gapminder, country =='Mexico')\n\n# A tibble: 12 × 6\n   country continent  year lifeExp       pop gdpPercap\n   &lt;fct&gt;   &lt;fct&gt;     &lt;int&gt;   &lt;dbl&gt;     &lt;int&gt;     &lt;dbl&gt;\n 1 Mexico  Americas   1952    50.8  30144317     3478.\n 2 Mexico  Americas   1957    55.2  35015548     4132.\n 3 Mexico  Americas   1962    58.3  41121485     4582.\n 4 Mexico  Americas   1967    60.1  47995559     5755.\n 5 Mexico  Americas   1972    62.4  55984294     6809.\n 6 Mexico  Americas   1977    65.0  63759976     7675.\n 7 Mexico  Americas   1982    67.4  71640904     9611.\n 8 Mexico  Americas   1987    69.5  80122492     8688.\n 9 Mexico  Americas   1992    71.5  88111030     9472.\n10 Mexico  Americas   1997    73.7  95895146     9767.\n11 Mexico  Americas   2002    74.9 102479927    10742.\n12 Mexico  Americas   2007    76.2 108700891    11978."
  }
]