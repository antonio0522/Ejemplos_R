 ---
title: "Semana 1"
format: html
editor: visual
---

## Ejemplo 1 (Creación y utilización de variable)

En est ejemplo se utilizara la libreria dplyr que empleará  filter.

```{r,message=FALSE}
library(dplyr)
```

Puede ser útil emplear una lista para una condición. En ese caso se ha de realizar.

```{r,message=FALSE}
setosa <- iris %>%
  filter(Species=="setosa")
head(setosa, 5)
```

La función table realiza tablas de frecuencia (cuenta registros), en este caso se tienen los tres posibles valores que toma la variable Species con el número de registros que tiene cada elemento de la variable, el número de registros que tiene cada nivel del factor, hay un factor que no tiene registros, no desaparece el nivel, simplemente aparece con 0 observaciones.

```{r,message=FALSE}
species_to_select = c("setosa","virginica")
species <- iris %>%
  filter(Species %in% species_to_select)

table(species$Species)
```

### Ejemplo 2 (Implementacion de ejemplos graficos)

Se procede a dibujar el gráfico de la función y=x^2−3x+30 entre −15 y 15. De título, poner “Una parábola”. De etiquetas, en el eje 0X, en formato matemático, “x”; y en el eje 0Y, introducir y=x2−3x+30
, también en formato matemático.Se utiliza la función curve()

```{r}
y<-function(x){x^2-3*x+30}
plot(y, xlim = c(-15,15), main = "UNA PARÁBOLA", xlab = expression(x), ylab = expression(x^2-3*x+30), col = "blue")
```


```{r}
curve(y, xlim = c(-15,15), col = "red", lty = 2, xaxp = c(-15,15,6), yaxp = c(0,300,30), main = "UNA PARÁBOLA")
```


### Ejemplo 3 (Libreria lubridate)

En este ejemplo se procede a utilizar las siguientes librerias

```{r, message=FALSE}
library(lubridate)
library(tidyverse)
```

En este paso se procede ha asignar una fecha a cada variable.

```{r}
date1 <- as_date("2018-04-16")
date2 <- as_date("2018-05-16")
```

Luego de asignar las fechas estipuladas, se procede a contar la cantidad de dias que hay entre una fecha y la otra automaticamente

```{r}
date2-date1
```



### Asignación 1 (Convertir PDf a XLSX)

Estas serian las librerias a utilizar.

```{r}
library(DT)
library(readxl)
```

Luego de convertir el archivo PDF a xlsx se procede a leer el archivo y imprimirlo en un datatable.

Debo mencionar que para convertir el documento utilicé un convertidor online llamado Adobe.

```{r}
datatable(Archivo_Excel_Nuevo<-read_xlsx("C:\\Users\\anton\\OneDrive\\Documentos\\Ejemplos_R\\datos_energia.xlsx"))
```